#!/bin/bash

detectOS() {
  # OS specific support (must be 'true' or 'false').
  darwin=false;
  linux=false;
  case "`uname`" in
    Darwin*)
      darwin=true
      ;;
    Linux*)
      linux=true
      ;;
    *)
      echo -e "\n`uname` is not currently supported, attempting to run with settings for linux\n"
      linux=true
  esac
}

function init()
{
    # Initialize SCRIPT_DIR
    SCRIPT_DIR=""

    # Set SCRIPT_DIR based on environment
    if $linux; then
    	SCRIPT_DIR="$(dirname "$(readlink -f "$0")")"
    elif $darwin; then
    	#For Darwin, check for greadlink
    	if type -p greadlink > /dev/null; then
    		SCRIPT_DIR="$(dirname "$(greadlink -f "$0")")"
    	else
    		echo -e "\n greadlink is not available in the PATH\n\
    			This is provided on OSX by coreutils\n\
    			coreutils can be installed through homebrew by running\n\
    			'brew install coreutils'\n\
    			For more information on homebrew, see: http://brew.sh"
    		echo -e "\nAttempting fallback method...\n"

    		SCRIPT_DIR=$( cd "$( dirname "$0" )" && pwd )
    	fi
    fi
    # Set DDF_CLI_HOME based on SCRIPT_DIR
    DDF_CLI_HOME=$(dirname ${SCRIPT_DIR})

    if [ ! -d "${DDF_CLI_HOME}/log" ]; then
        mkdir -p ${DDF_CLI_HOME}/log
        touch ${DDF_CLI_HOME}/log/ddf-cli.log
    fi
}

function run()
{
    java -Dddf.cli.home=${DDF_CLI_HOME} -jar ${DDF_CLI_HOME}/lib/java-cli-example-jar-with-dependencies.jar ${CLI_ARGS}
}

function main()
{
    detectOS

    init

    run
}

CLI_ARGS="$@"

main
